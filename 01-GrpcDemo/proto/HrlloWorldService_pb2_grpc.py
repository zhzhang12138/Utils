# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import HrlloWorldService_pb2 as HrlloWorldService__pb2


class HelloWorldStub(object):
  """对外暴露的服务
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendSms = channel.unary_unary(
        '/HelloWorld/SendSms',
        request_serializer=HrlloWorldService__pb2.HelloWorldRequest.SerializeToString,
        response_deserializer=HrlloWorldService__pb2.HelloWorldResponse.FromString,
        )


class HelloWorldServicer(object):
  """对外暴露的服务
  """

  def SendSms(self, request, context):
    """对外暴露的函数名，参数和返回值
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HelloWorldServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendSms': grpc.unary_unary_rpc_method_handler(
          servicer.SendSms,
          request_deserializer=HrlloWorldService__pb2.HelloWorldRequest.FromString,
          response_serializer=HrlloWorldService__pb2.HelloWorldResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'HelloWorld', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
